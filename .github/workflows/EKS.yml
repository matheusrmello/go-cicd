name: Deploy EKS

on:
  workflow_call:
  
jobs:

  EKS:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest]
        
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - run: git clone https://github.com/matheusrmello/infra_CI_K8S.git

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - run: terraform -chdir=infra_CI_K8S/env/Homolog init

    - run: terraform -chdir=infra_CI_K8S/env/Homolog refresh

    - run: terraform -chdir=infra_CI_K8S/env/Homolog apply -auto-approve

    - run: echo "$(terraform -chdir=infra_CI_K8S/env/Homolog output -raw IP_db)" 
      id: URL

    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v4.0.0

    - run: aws sts get-caller-identity
    - run: aws eks update-kubeconfig --region us-east-1 --name prod-cluster
    - run: kubectl get svc

    - run: kubectl create secret generic dbhost --from-literal=HOST=${{ steps.URL.output.stdout }}
    - run: kubectl create secret generic dbport --from-literal=DBPORT=${{ secrets.DBPORT }}
    - run: kubectl create secret generic dbuser --from-literal=USER=${{ secrets.DBUSER }}
    - run: kubectl create secret generic dbpassword --from-literal=PASSWORD=${{ secrets.DBPASSWORD }}
    - run: kubectl create secret generic dbname --from-literal=DBNAME=${{ secrets.DBNAME }}
    - run: kubectl create secret generic port --from-literal=PORT=8000

    - run: kubectl apply -f infra_CI_K8S/go.yaml




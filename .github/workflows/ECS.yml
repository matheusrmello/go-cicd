name: Entrega continua

on:
  workflow_call:
  
jobs:

  Deploy_ECS:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Donwload task definition
      run:
        |
        aws ecs describe-task-definition --task-definition Go-task --query taskDefinition > task-definition.json

    - name: Copy task definition
      run: cp task-definition.json task-definition.json.old

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: Go-CI
        image: matheusmello09/go_ci:v${{ github.run_number }}	
        environment-variables: |
          HOST=${{ secrets.DBHOST }}
          USER=${{ secrets.DBUSER }}
          PASSWORD=${{ secrets.DBPASSWORD }}
          DBNAME=${{ secrets.DBNAME }}
          DBPORT=${{ secrets.DBPORT }}
          PORT=8000

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: service_go
        cluster: go-cluster-dev
        wait-for-service-stability: true

    - name: Request
      continue-on-error: true
      run: echo "REQUEST=0" >> $GITHUB_ENV ; sleep 30s ; wget LB-API-GO-1290617069.us-east-1.elb.amazonaws.com:8000/matheus || echo "REQUEST=1" >> $GITHUB_ENV

    - name: Deploy Amazon ECS task definition
      if: ${{ env.REQUEST != 0 }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json.old
        service: service_go
        cluster: go-cluster-dev
        wait-for-service-stability: true
